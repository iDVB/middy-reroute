{"version":3,"file":"reroute.esm.js","sources":["../src/utils/logger.js","../src/utils/deepmerge.js","../src/utils/cache-service.js","../src/reroute.js","../src/reroute-origin.js"],"sourcesContent":["import debug from 'debug';\nconst log = debug('reroute:log');\nlog.log = console.log.bind(console);\n\nexport default log;\n","import merge from 'deepmerge';\n\nconst deepmerge = (x, y, { arrayMerge, ...rest } = {}) =>\n  merge(x, y, { ...rest, arrayMerge: combineMerge });\n\nconst all = (arr, { arrayMerge, ...rest } = {}) =>\n  merge.all(arr, { ...rest, arrayMerge: combineMerge });\n\nconst emptyTarget = (value) => (Array.isArray(value) ? [] : {});\nconst clone = (value, options) => merge(emptyTarget(value), value, options);\nconst combineMerge = (target, source, options) => {\n  const destination = target.slice();\n  source.forEach((e, i) => {\n    if (typeof destination[i] === 'undefined') {\n      const cloneRequested = options.clone !== false;\n      const shouldClone = cloneRequested && options.isMergeableObject(e);\n      destination[i] = shouldClone ? clone(e, options) : e;\n    } else if (options.isMergeableObject(e)) {\n      destination[i] = merge(target[i], e, options);\n    } else if (target.indexOf(e) === -1) {\n      destination.push(e);\n    }\n  });\n  return destination;\n};\n\nexport default deepmerge;\nexport { all };\n","import NodeCache from 'node-cache';\n\nclass Cache {\n  constructor(ttlSeconds) {\n    this.cache = new NodeCache({\n      stdTTL: ttlSeconds,\n      checkperiod: ttlSeconds * 0.2,\n      useClones: false,\n    });\n\n    this.ttl = ttlSeconds;\n  }\n\n  get(key, storeFunction) {\n    if (this.ttl > 0) {\n      const value = this.cache.get(key);\n      if (value) {\n        return Promise.resolve(value);\n      }\n    }\n    return storeFunction().then((result) => {\n      this.ttl > 0 && this.cache.set(key, result, this.ttl);\n      return result;\n    });\n  }\n\n  del(keys) {\n    this.cache.del(keys);\n  }\n\n  setDefaultTtl(ttl) {\n    this.ttl = ttl;\n    this.ttl === 0 && this.flush();\n  }\n\n  delStartWith(startStr = '') {\n    if (!startStr) {\n      return;\n    }\n\n    const keys = this.cache.keys();\n    for (const key of keys) {\n      if (key.indexOf(startStr) === 0) {\n        this.del(key);\n      }\n    }\n  }\n\n  flush() {\n    this.cache.flushAll();\n  }\n}\n\nexport default Cache;\n","import AWS from 'aws-sdk';\nimport * as util from 'util';\nimport { STATUS_CODES } from 'http';\nimport logger from './utils/logger';\nimport axios from 'axios';\nimport _find from 'lodash.find';\nimport _reduce from 'lodash.reduce';\nimport _omit from 'lodash.omit';\nimport _omitBy from 'lodash.omitby';\nimport { parse } from 'url';\nimport path from 'path';\nimport pathMatch from 'path-match';\nimport langParser from 'accept-language-parser';\nimport UAParser from 'ua-parser-js';\nimport semver from 'semver';\nimport merge, { all as mergeAll } from './utils/deepmerge';\nimport CacheService from './utils/cache-service';\n\nconst ttl = 300; // default TTL of 30 seconds\nconst cache = new CacheService(ttl);\n\naxios.interceptors.response.use(\n  function (response) {\n    // Do something with response data\n    return response;\n  },\n  function (error) {\n    // Do something with response error\n    return Promise.reject(error);\n  },\n);\n\nconst route = pathMatch({\n  sensitive: false,\n  strict: false,\n  end: true,\n});\n\nlet options, S3;\nconst rerouteMiddleware = async (opts = {}, handler, next) => {\n  const { request } = handler.event.Records[0].cf;\n  const { origin } = request;\n  const [host, country, language, userAgent] = getHeaderValues(\n    ['host', 'cloudfront-viewer-country', 'accept-language', 'user-agent'],\n    request.headers,\n  );\n  const defaults = {\n    file: '_redirects',\n    rules: undefined,\n    multiFile: false,\n    regex: {\n      htmlEnd: /(.*)\\/((.*)\\.html?)$/,\n      ignoreRules: /^(?:\\s*(?:#.*)*)$[\\r\\n]{0,1}|(?:#.*)*/gm,\n      ruleline:\n        /([^\\s\\r\\n]+)(?:\\s+)([^\\s\\r\\n]+)(?:\\s+(\\d+)([!]?))?(?:(?:\\s+)?([^\\s\\r\\n]+))?/,\n      absoluteUri: /^(?:[a-z]+:)?\\/\\//,\n      bucketNameFromDomain:\n        /(^.+)(\\.s3(?:\\.[a-z]+-[a-z]+-[0-9]+)?\\.amazonaws\\.com$)/,\n    },\n    defaultStatus: 301,\n    redirectStatuses: [301, 302, 303],\n    friendlyUrls: true,\n    defaultDoc: `index.html`,\n    custom404: `404.html`,\n    cacheTtl: ttl,\n    incomingProtocol: 'https://',\n    s3Options: { httpOptions: { connectTimeout: 2000 } }, // default 2 seconds\n  };\n  const s3DomainName = origin?.s3?.domainName;\n  const originPath = origin?.s3?.path;\n  const originBucket = s3DomainName?.split(\n    defaults.regex.bucketNameFromDomain,\n  )?.[1];\n  options = mergeAll([\n    defaults,\n    {\n      rulesBucket: originBucket,\n    },\n    opts,\n    {\n      originBucket,\n      host,\n      country,\n      language,\n      userAgent,\n    },\n  ]);\n  cache.setDefaultTtl(options.cacheTtl);\n\n  S3 = S3 || new AWS.S3(options.s3Options);\n\n  logger(`\n    Raw Event:\n    ${JSON.stringify(handler.event)}\n\n    Middleware Options:\n    ${JSON.stringify(options)}\n    ---- Request ----\n    URI: ${request.uri}\n    Host: ${options.host}\n    Origin: ${s3DomainName}\n    Country: ${options.country}\n    Language: ${options.language}\n    UserAgent: ${options.userAgent}\n    `);\n\n  console.log(util.inspect({ middyReroute: request }, { depth: null }));\n\n  // If \"X-No-Middy-Reroute\" header is present then do no run\n  if (!!request.headers['X-No-Middy-Reroute'] === true) return;\n\n  console.log('after return', request.headers['X-No-Middy-Reroute']);\n\n  // Bypass if Origin is not S3\n  if (!s3DomainName) return;\n\n  try {\n    // Check if file exists\n    const parsedURI = new URL(\n      `https://example.com${request.uri}?${request.querystring}`,\n    );\n    const keyExists = await doesKeyExist({\n      key: parsedURI.pathname,\n      originPath,\n    });\n    // Detect if needing friendly URLs\n    const isUnFriendlyUrl =\n      options.friendlyUrls && parsedURI.pathname.match(options.regex.htmlEnd);\n\n    const [first, fullpath, file, filename] = isUnFriendlyUrl || [];\n    const isIndex = filename === 'index';\n\n    let event;\n    // Apply Friendly URLs if file doesn't exist\n    // Do not apply any rules and Redirect\n\n    if (isUnFriendlyUrl && (!keyExists || isIndex)) {\n      const end = isIndex ? '' : `${filename}/`;\n      const finalKey = `${fullpath}/${end}${parsedURI.search}`;\n      logger('UN-FriendlyURL [from:to]: ', request.uri, finalKey);\n      event = redirect(finalKey, 301);\n    } else {\n      // Gather and parse rules\n      const data = await getRedirectData({ originPath });\n      logger('Rules: ', data);\n\n      // Find URI match in the rules\n      const match = findMatch(\n        data,\n        request.uri,\n        host,\n        options.incomingProtocol,\n      );\n\n      if (match) {\n        logger('Match FOUND: ', match.parsedTo);\n        // Match: match found\n        // Use status to decide how to handle\n        event = isRedirectURI(match.status)\n          ? redirect(`${match.parsedTo}${parsedURI.search}`, match.status)\n          : isAbsoluteURI(match.parsedTo)\n          ? await proxy(match.parsedTo, handler.event)\n          : await rewrite({\n              to: forceDefaultDoc(match.parsedTo),\n              host: s3DomainName,\n              event: handler.event,\n              originPath,\n            });\n      } else {\n        logger('NO Match');\n        // Pass-Through: No match, so other then DefaultDoc, let it pass through\n        event = await rewrite({\n          to: forceDefaultDoc(request.uri),\n          host: s3DomainName,\n          event: handler.event,\n          originPath,\n        });\n      }\n    }\n\n    handler.event = event;\n  } catch (err) {\n    logger('Throwing Error for main thread');\n    throw err;\n  }\n\n  logger('RETURNING EVENT!!!!', handler.event);\n  console.log(util.inspect({ eventFinal: handler.event }, { depth: null }));\n  return;\n};\n\n///////////////////////\n// Utils     //\n///////////////////////\nconst getHeaderValues = (paramArr, headers) =>\n  paramArr.map(\n    (param) => headers[param] && headers[param][0] && headers[param][0].value,\n  );\nconst isRedirectURI = (status) => options.redirectStatuses.includes(status);\n\nconst isAbsoluteURI = (to) => {\n  const test = options.regex.absoluteUri.test(to);\n  logger('isAbsoluteURI: ', test, to);\n  return test;\n};\n\nconst capitalizeParam = (param) =>\n  param\n    .split('-')\n    .map((i) => i.charAt(0).toUpperCase() + i.slice(1))\n    .join('-');\n\nconst forceDefaultDoc = (uri) => {\n  if (path.extname(uri) === '' && !!options.defaultDoc) {\n    const newURL = new URL(`https://example.com/${uri}`);\n    const pathname = path.join(newURL.pathname, options.defaultDoc);\n    return `${pathname}${newURL.search}${newURL.hash}`;\n  }\n  return uri;\n};\n\nconst lambdaReponseToObj = (req) => {\n  const { method, body } = req;\n  return {\n    method,\n    headers: _omit(\n      _reduce(\n        req.headers,\n        (result, value, key) => ({ ...result, [value[0].key]: value[0].value }),\n        {},\n      ),\n      ['Host'],\n    ),\n  };\n};\n\nconst blacklistedHeaders = {\n  exact: [\n    'Connection',\n    'Expect',\n    'Keep-alive',\n    'Proxy-Authenticate',\n    'Proxy-Authorization',\n    'Proxy-Connection',\n    'Trailer',\n    'Upgrade',\n    'X-Accel-Buffering',\n    'X-Accel-Charset',\n    'X-Accel-Limit-Rate',\n    'X-Accel-Redirect',\n    'X-Cache',\n    'X-Forwarded-Proto',\n    'X-Real-IP',\n    'Accept-Encoding',\n    'Content-Length',\n    'If-Modified-Since',\n    'If-None-Match',\n    'If-Range',\n    'If-Unmodified-Since',\n    'Range',\n    'Transfer-Encoding',\n    'Via',\n  ],\n  startsWith: ['X-Amzn-', 'X-Amz-Cf-', 'X-Edge-'],\n};\nconst isBlacklistedProperty = (name) =>\n  blacklistedHeaders.exact.includes(name) ||\n  !!blacklistedHeaders.startsWith.find((i) => name.startsWith(i));\n\n///////////////////////\n// Rules Parsing     //\n///////////////////////\nconst replacePlaceholders = (obj, pattern) =>\n  pattern.replace(/:(?!splat)(\\w+)/g, (_, k) => obj[k]);\n\nconst replaceSplats = (obj, pattern) =>\n  _reduce(\n    obj,\n    (result, value, key) => result.replace(/(:splat)/g, obj[key]),\n    pattern,\n  ).replace(/(:splat)/g, '');\n\nconst replaceAll = (obj, pattern) =>\n  replaceSplats(obj, replacePlaceholders(obj, pattern));\n\nconst parseConditions = (conditions) =>\n  !!conditions\n    ? conditions.split(';').reduce((results, next) => {\n        const [unused, key, value] = next.split(/([^=]*)=(.*)/);\n        return { ...results, [key.toLowerCase()]: value.split(',') };\n      }, {})\n    : {};\n\nconst parseRules = (stringFile) => {\n  logger('Parsing String: ', stringFile);\n  return (\n    stringFile\n      // remove empty and commented lines\n      .replace(options.regex.ignoreRules, '')\n      // split all lines\n      .split(/[\\r\\n]/gm)\n      // strip out the last line break\n      .filter((l) => l !== '')\n      .map((l) => {\n        // regex\n        const [first, from, to, status, force, conditions] = l.match(\n          options.regex.ruleline,\n        );\n        // restructure into object\n        return {\n          from,\n          to,\n          status: status ? parseInt(status, 10) : options.defaultStatus,\n          force: !!force,\n          conditions: parseConditions(conditions),\n        };\n      })\n  );\n};\n\nconst countryParser = (supportedCountryArray, acceptCountryHeader) =>\n  supportedCountryArray\n    .map((c) => c.toLowerCase())\n    .includes(acceptCountryHeader.toLowerCase());\n\nconst userAgentParser = (testuserAgentArray, userAgentHeader) => {\n  const { name: browser, version } = UAParser(userAgentHeader).browser;\n  const match = _find(testuserAgentArray, (uaRule) => {\n    const [browserRule, versionRule] = uaRule.split(':');\n    const cleanVersion = semver.valid(semver.coerce(version));\n    const isVersion = semver.satisfies(cleanVersion, versionRule);\n    const isBrowser = browser === browserRule;\n    const isMatch = isBrowser && isVersion;\n    return isMatch;\n  });\n  return !!match;\n};\n\nconst findMatch = (data, path, host, protocol) => {\n  let params;\n  const fullUri = host && `${protocol}${host}${path}`;\n  const parsedPath = parse(path);\n  const match = _find(data, (o) => {\n    const from = route(o.from);\n    params = isAbsoluteURI(o.from) ? from(fullUri) : from(parsedPath.pathname);\n\n    // If there specific language rules, do they match\n    const languagePass = !!o.conditions.language\n      ? !!options.language &&\n        !!langParser.pick(o.conditions.language, options.language, {\n          loose: true,\n        })\n      : true;\n\n    // If there specific country rules, do they match\n    const countryPass = !!o.conditions.country\n      ? !!options.country &&\n        countryParser(o.conditions.country, options.country)\n      : true;\n\n    // If there specific user-agent rules, do they match\n    const agentPass = !!o.conditions.useragent\n      ? !!options.userAgent &&\n        userAgentParser(o.conditions.useragent, options.userAgent)\n      : true;\n\n    // Let's make sure all our conditions pass IF set\n    const passesConditions = languagePass && countryPass && agentPass;\n    return params !== false && passesConditions;\n  });\n  return (\n    match && {\n      ...match,\n      parsedTo: `${replaceAll(params, match.to)}${parsedPath.search || ''}${\n        parsedPath.hash || ''\n      }`,\n    }\n  );\n};\n\n///////////////////////\n// Data Fetching     //\n///////////////////////\nconst doesKeyExist = ({ key: rawKey, originPath }) => {\n  const Key = path.join(originPath, rawKey).replace(/^\\/+([^\\/])/, '$1');\n  logger('doesKeyExist: ', { Key, Bucket: options.originBucket });\n  const cacheKey = `doesKeyExist_${options.rulesBucket}_${Key}`;\n  return cache.get(cacheKey, () =>\n    S3.headObject({\n      Bucket: options.originBucket,\n      Key,\n    })\n      .promise()\n      .then((data) => {\n        logger('doesKeyExist FOUND: ', Key);\n        return true;\n      })\n      .catch((err) => {\n        if (err.errorType === 'NoSuchKey' || err.code === 'NotFound') {\n          logger('doesKeyExist NOT Found: ', Key);\n          return false;\n        }\n        logger('doesKeyExist err: ', err);\n        return false;\n      }),\n  );\n};\n\nconst getRedirectData = ({ originPath }) => {\n  const file = !options.multiFile\n    ? options.file\n    : `${options.file}_${options.host}`;\n  const Key = path.join(originPath, file).replace(/^\\/+([^\\/])/, '$1');\n  const cacheKey = `getRedirectData_${options.rulesBucket}_${Key}`;\n  return cache.get(cacheKey, () => {\n    logger(`\n      Getting Rules from: ${options.rules ? 'Options' : 'S3'}\n      Bucket: ${options.rulesBucket}\n      Key: ${Key}`);\n    return !!options.rules\n      ? Promise.resolve(parseRules(options.rules))\n      : S3.getObject({\n          Bucket: options.rulesBucket,\n          Key,\n        })\n          .promise()\n          .then((data) => parseRules(data.Body.toString()))\n          .catch((err) => {\n            logger('No _redirects file', err);\n            return false;\n          });\n  });\n};\n\nconst getProxyResponse = (resp) => {\n  const { status, statusText: statusDescription, data } = resp;\n  logger('getProxyResponse raw headers: ', resp.headers);\n  const headers = _omitBy(\n    _reduce(\n      resp.headers,\n      (result, value, key) => ({\n        ...result,\n        [key]: [\n          {\n            key: capitalizeParam(key),\n            value: resp.headers[key],\n          },\n        ],\n      }),\n      {},\n    ),\n    (value, key) => isBlacklistedProperty(value[0].key),\n  );\n  logger('getProxyResponse parse headers: ', headers);\n  const response = {\n    status,\n    statusDescription,\n    headers,\n    body: data.toString('base64'),\n    bodyEncoding: 'base64',\n  };\n  return response;\n};\n\nconst get404Response = ({ originPath }) => {\n  const Key = path\n    .join(originPath, options.custom404)\n    .replace(/^\\/+([^\\/])/, '$1');\n  const cacheKey = `get404Response_${options.rulesBucket}_${Key}`;\n  return cache.get(cacheKey, () =>\n    S3.getObject({\n      Bucket: options.originBucket,\n      Key,\n    })\n      .promise()\n      .then(({ Body }) => {\n        logger('Custom 404 FOUND');\n        return {\n          status: '404',\n          statusDescription: STATUS_CODES['404'],\n          headers: {\n            'content-type': [\n              {\n                key: 'Content-Type',\n                value: 'text/html',\n              },\n            ],\n          },\n          body: Body.toString(),\n        };\n      })\n      .catch((err) => {\n        if (err.errorType === 'NoSuchKey') {\n          logger('Custom 404 NOT Found');\n        }\n        logger('Get404ResponseErr', err);\n        return false;\n      }),\n  );\n};\n\n///////////////////////////\n// Event Generators     //\n//////////////////////////\nconst redirect = (to, status) => {\n  logger('Redirecting: ', to, status);\n  return {\n    status,\n    statusDescription: STATUS_CODES[status],\n    headers: {\n      location: [{ key: 'Location', value: to }],\n    },\n  };\n};\n\nconst rewrite = async ({ to, host, event, originPath }) => {\n  logger('Rewriting: ', to);\n  const resp =\n    (!isAbsoluteURI(to) &&\n      !(await doesKeyExist({ key: to, originPath })) &&\n      (await get404Response({ originPath }))) ||\n    merge(event, {\n      Records: [\n        {\n          cf: {\n            request: {\n              headers: { host: [{ key: 'Host', value: host }] },\n              uri: to,\n              querystring: '',\n            },\n          },\n        },\n      ],\n    });\n  logger('Rewriting Event: ', JSON.stringify(resp));\n  return resp;\n};\n\nconst proxy = (url, event) => {\n  logger('PROXY start: ', url);\n  const { request } = event.Records[0].cf;\n  const config = {\n    ...lambdaReponseToObj(request),\n    url,\n    validateStatus: null,\n    maxContentLength: 8000000,\n    responseType: 'arraybuffer',\n  };\n  logger('PROXY config: ', config);\n  return axios(config)\n    .then((resp) => {\n      logger('PROXY data: ', _omit(resp, ['request', 'config']));\n      return getProxyResponse(resp);\n    })\n    .catch((err) => {\n      logger('PROXY err: ', err);\n      throw err;\n    });\n};\n\nexport default (opts) => ({\n  before: rerouteMiddleware.bind(null, opts),\n});\n","import dotProp from 'dot-prop-immutable';\nimport logger from './utils/logger';\nimport CacheService from './utils/cache-service';\nimport merge from './utils/deepmerge';\nimport AWS from 'aws-sdk';\n\nconst S3_SUFFIX = '.s3.amazonaws.com';\nconst ORIGIN_S3_DOTPATH = 'Records.0.cf.request.origin.s3';\n\nconst ttl = 300; // default TTL of 30 seconds\nconst cache = new CacheService(ttl);\n\nlet DDB;\nconst rerouteOrigin = async (opts = {}, handler, next) => {\n  const { context } = handler;\n  const { request } = handler.event.Records[0].cf;\n  const { origin } = request;\n  const [host] = getHeaderValues(['host'], request.headers);\n  const s3DomainName = origin && origin.s3 && origin.s3.domainName;\n  const originBucket = s3DomainName && s3DomainName.replace(S3_SUFFIX, '');\n\n  const tableSuffix = '-domainmap';\n  const functionSuffix = '-originrequest';\n  const defaults = {\n    functionSuffix,\n    tableSuffix,\n    tableName: getTableFromFunctionName(\n      context.functionName,\n      opts.functionSuffix || functionSuffix,\n      opts.tableSuffix || tableSuffix,\n    ),\n    cacheTtl: ttl,\n  };\n  const options = merge(defaults, opts);\n  cache.setDefaultTtl(options.cacheTtl);\n\n  DDB =\n    DDB ||\n    new AWS.DynamoDB({\n      apiVersion: '2012-08-10',\n      region: 'us-east-1',\n    });\n\n  logger(`\n    Raw Event:\n    ${JSON.stringify(handler.event)}\n\n    Middleware Options:\n    ${JSON.stringify(options)}\n    ---- Request ----\n    URI: ${request.uri}\n    Host: ${host}\n    Origin: ${s3DomainName}\n    `);\n\n  try {\n    const domainData = await getDomainData(options.tableName, host);\n    logger({ domainData });\n    handler.event = !!domainData\n      ? dotProp.merge(handler.event, ORIGIN_S3_DOTPATH, {\n          region: domainData.region,\n          domainName: domainData.origin,\n        })\n      : handler.event;\n  } catch (err) {\n    logger('Throwing Error for main thread');\n    throw err;\n  }\n\n  return;\n};\n\nexport default (opts) => ({\n  before: rerouteOrigin.bind(null, opts),\n});\n\n///////////////////////\n// Utils     //\n///////////////////////\nconst getHeaderValues = (paramArr, headers) =>\n  paramArr.map(\n    (param) => headers[param] && headers[param][0] && headers[param][0].value,\n  );\n\n// from:  us-east-1.myproject-prod-originrequest\n// to:    myproject-prod-domainmap\nconst getTableFromFunctionName = (\n  functionName,\n  functionSuffix,\n  tableSuffix,\n) => {\n  logger(`\n  getTableFromFunctionName:\n  ${JSON.stringify({ functionName, functionSuffix, tableSuffix })}\n  `);\n  const [rest, stackname] =\n    functionName.match(`^(?:us-east-1\\.)?(.+)${functionSuffix}$`) || [];\n  return `${stackname}${tableSuffix}`;\n};\n\nconst getDomainData = (table, host) =>\n  cache.get(`getDomainData_${host}`, () =>\n    DDB.getItem({\n      Key: {\n        Host: {\n          S: host,\n        },\n      },\n      TableName: table,\n    })\n      .promise()\n      .then((data) => {\n        logger(`\n      getDomainData: \n      ${JSON.stringify(data)}`);\n        return (\n          data.Item &&\n          data.Item.Origin &&\n          data.Item.Origin.S && {\n            host: data.Item.Host.S,\n            origin: data.Item.Origin.S,\n            region: (data.Item.Region && data.Item.Region.S) || 'us-east-1',\n          }\n        );\n      }),\n  );\n"],"names":["log","debug","console","bind","deepmerge","x","y","rest","merge","arrayMerge","combineMerge","all","arr","emptyTarget","value","Array","isArray","clone","options","target","source","destination","slice","forEach","e","i","cloneRequested","shouldClone","isMergeableObject","indexOf","push","Cache","constructor","ttlSeconds","cache","NodeCache","stdTTL","checkperiod","useClones","ttl","get","key","storeFunction","Promise","resolve","then","result","set","del","keys","setDefaultTtl","flush","delStartWith","startStr","flushAll","CacheService","axios","interceptors","response","use","error","reject","route","pathMatch","sensitive","strict","end","S3","rerouteMiddleware","opts","handler","next","request","event","Records","cf","origin","host","country","language","userAgent","getHeaderValues","headers","defaults","file","rules","undefined","multiFile","regex","htmlEnd","ignoreRules","ruleline","absoluteUri","bucketNameFromDomain","defaultStatus","redirectStatuses","friendlyUrls","defaultDoc","custom404","cacheTtl","incomingProtocol","s3Options","httpOptions","connectTimeout","s3DomainName","s3","domainName","originPath","path","originBucket","split","mergeAll","rulesBucket","AWS","logger","JSON","stringify","uri","util","inspect","middyReroute","depth","parsedURI","URL","querystring","keyExists","doesKeyExist","pathname","isUnFriendlyUrl","match","first","fullpath","filename","isIndex","finalKey","search","redirect","data","getRedirectData","findMatch","parsedTo","isRedirectURI","status","isAbsoluteURI","proxy","rewrite","to","forceDefaultDoc","err","eventFinal","paramArr","map","param","includes","test","capitalizeParam","charAt","toUpperCase","join","extname","newURL","hash","lambdaReponseToObj","req","method","body","_omit","_reduce","blacklistedHeaders","exact","startsWith","isBlacklistedProperty","name","find","replacePlaceholders","obj","pattern","replace","_","k","replaceSplats","replaceAll","parseConditions","conditions","reduce","results","unused","toLowerCase","parseRules","stringFile","filter","l","from","force","parseInt","countryParser","supportedCountryArray","acceptCountryHeader","c","userAgentParser","testuserAgentArray","userAgentHeader","browser","version","UAParser","_find","uaRule","browserRule","versionRule","cleanVersion","semver","valid","coerce","isVersion","satisfies","isBrowser","isMatch","protocol","params","fullUri","parsedPath","parse","o","languagePass","langParser","pick","loose","countryPass","agentPass","useragent","passesConditions","rawKey","Key","Bucket","cacheKey","headObject","promise","catch","errorType","code","getObject","Body","toString","getProxyResponse","resp","statusText","statusDescription","_omitBy","bodyEncoding","get404Response","STATUS_CODES","location","url","config","validateStatus","maxContentLength","responseType","before","S3_SUFFIX","ORIGIN_S3_DOTPATH","DDB","rerouteOrigin","context","tableSuffix","functionSuffix","tableName","getTableFromFunctionName","functionName","DynamoDB","apiVersion","region","domainData","getDomainData","dotProp","stackname","table","getItem","Host","S","TableName","Item","Origin","Region"],"mappings":"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"}