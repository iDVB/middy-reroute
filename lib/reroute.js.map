{"version":3,"file":"reroute.js","sources":["../src/utils/logger.js","../src/s3.js","../src/utils/deepmerge.js","../src/utils/cache-service.js","../src/reroute.js","../src/ddb.js","../src/reroute-origin.js"],"sourcesContent":["import debug from 'debug';\nconst log = debug('reroute:log');\nlog.log = console.log.bind(console);\n\nexport default log;\n","import AWS from 'aws-sdk';\nconst S3 = new AWS.S3();\n\nexport default S3;\n","import merge from 'deepmerge';\n\nconst deepmerge = (x, y, { arrayMerge, ...rest } = {}) =>\n  merge(x, y, { ...rest, arrayMerge: combineMerge });\n\nconst all = (arr, { arrayMerge, ...rest } = {}) =>\n  merge.all(arr, { ...rest, arrayMerge: combineMerge });\n\nconst emptyTarget = value => (Array.isArray(value) ? [] : {});\nconst clone = (value, options) => merge(emptyTarget(value), value, options);\nconst combineMerge = (target, source, options) => {\n  const destination = target.slice();\n  source.forEach((e, i) => {\n    if (typeof destination[i] === 'undefined') {\n      const cloneRequested = options.clone !== false;\n      const shouldClone = cloneRequested && options.isMergeableObject(e);\n      destination[i] = shouldClone ? clone(e, options) : e;\n    } else if (options.isMergeableObject(e)) {\n      destination[i] = merge(target[i], e, options);\n    } else if (target.indexOf(e) === -1) {\n      destination.push(e);\n    }\n  });\n  return destination;\n};\n\nexport default deepmerge;\nexport { all };\n","import NodeCache from 'node-cache';\n\nclass Cache {\n  constructor(ttlSeconds) {\n    this.cache = new NodeCache({\n      stdTTL: ttlSeconds,\n      checkperiod: ttlSeconds * 0.2,\n      useClones: false,\n    });\n\n    this.ttl = ttlSeconds;\n  }\n\n  get(key, storeFunction) {\n    if (this.ttl > 0) {\n      const value = this.cache.get(key);\n      if (value) {\n        return Promise.resolve(value);\n      }\n    }\n    return storeFunction().then(result => {\n      this.ttl > 0 && this.cache.set(key, result, this.ttl);\n      return result;\n    });\n  }\n\n  del(keys) {\n    this.cache.del(keys);\n  }\n\n  setDefaultTtl(ttl) {\n    this.ttl = ttl;\n    this.ttl === 0 && this.flush();\n  }\n\n  delStartWith(startStr = '') {\n    if (!startStr) {\n      return;\n    }\n\n    const keys = this.cache.keys();\n    for (const key of keys) {\n      if (key.indexOf(startStr) === 0) {\n        this.del(key);\n      }\n    }\n  }\n\n  flush() {\n    this.cache.flushAll();\n  }\n}\n\nexport default Cache;\n","import logger from './utils/logger';\nimport { STATUS_CODES } from 'http';\nimport S3 from './s3';\nimport axios from 'axios';\nimport merge, { all as mergeAll } from './utils/deepmerge';\nimport _find from 'lodash.find';\nimport _reduce from 'lodash.reduce';\nimport _omit from 'lodash.omit';\nimport _omitBy from 'lodash.omitby';\nimport { parse } from 'url';\nimport path from 'path';\nimport pathMatch from 'path-match';\nimport CacheService from './utils/cache-service';\nimport langParser from 'accept-language-parser';\n\nconst ttl = 300; // default TTL of 30 seconds\nconst cache = new CacheService(ttl);\n\nconst route = pathMatch({\n  sensitive: false,\n  strict: false,\n  end: true,\n});\n\nlet options;\nconst rerouteMiddleware = async (opts = {}, handler, next) => {\n  const { request } = handler.event.Records[0].cf;\n  const { origin } = request;\n  const [host, country, language] = getHeaderValues(\n    ['host', 'cloudfront-viewer-country', 'accept-language'],\n    request.headers,\n  );\n  const s3DomainName = origin && origin.s3 && origin.s3.domainName;\n  const originBucket =\n    s3DomainName && s3DomainName.replace('.s3.amazonaws.com', '');\n  const defaults = {\n    file: '_redirects',\n    rules: undefined,\n    multiFile: false,\n    rulesBucket: originBucket,\n    regex: {\n      htmlEnd: /(.*)\\/((.*)\\.html?)$/,\n      ignoreRules: /^(?:\\s*(?:#.*)*)$[\\r\\n]{0,1}|(?:#.*)*/gm,\n      ruleline: /([^\\s\\r\\n]+)(?:\\s+)([^\\s\\r\\n]+)(?:\\s+(\\d+)([!]?))?(?:(?:\\s+)?([^\\s\\r\\n]+))?/,\n      absoluteUri: /^(?:[a-z]+:)?\\/\\//,\n    },\n    defaultStatus: 301,\n    redirectStatuses: [301, 302, 303],\n    friendlyUrls: true,\n    defaultDoc: `index.html`,\n    custom404: `404.html`,\n    cacheTtl: ttl,\n    incomingProtocol: 'https://',\n  };\n  options = mergeAll([\n    defaults,\n    opts,\n    {\n      originBucket,\n      host,\n      country,\n      language,\n    },\n  ]);\n  cache.setDefaultTtl(options.cacheTtl);\n\n  logger(`\n    Raw Event:\n    ${JSON.stringify(handler.event)}\n\n    Middleware Options:\n    ${JSON.stringify(options)}\n    ---- Request ----\n    URI: ${request.uri}\n    Host: ${options.host}\n    Origin: ${s3DomainName}\n    Country: ${options.country}\n    Language: ${options.language}\n    `);\n\n  // Origin must be S3\n  if (!s3DomainName) throw new Error('Must use S3 as Origin');\n\n  try {\n    // Check if file exists\n    const keyExists = await doesKeyExist(request.uri);\n\n    // Detect if needing friendly URLs\n    const isUnFriendlyUrl =\n      options.friendlyUrls && request.uri.match(options.regex.htmlEnd);\n\n    let event;\n    // Apply Friendly URLs if file doesn't exist\n    // Do not apply any rules and Redirect\n    if (!keyExists && isUnFriendlyUrl) {\n      const [first, fullpath, file, filename] = isUnFriendlyUrl;\n      const end = filename === 'index' ? '' : `${filename}/`;\n      const finalKey = `${fullpath}/${end}`;\n      logger('UN-FriendlyURL [from:to]: ', request.uri, finalKey);\n      event = redirect(finalKey, 301);\n    } else {\n      // Gather and parse rules\n      const data = await getRedirectData();\n      logger('Rules: ', data);\n\n      // Find URI match in the rules\n      const match = findMatch(\n        data,\n        request.uri,\n        host,\n        options.incomingProtocol,\n      );\n      if (match) {\n        logger('Match FOUND: ', match.parsedTo);\n        // Match: match found\n        // Use status to decide how to handle\n        event = isRedirectURI(match.status)\n          ? redirect(match.parsedTo, match.status)\n          : isAbsoluteURI(match.parsedTo)\n          ? await proxy(match.parsedTo, handler.event)\n          : await rewrite(\n              forceDefaultDoc(match.parsedTo),\n              s3DomainName,\n              handler.event,\n            );\n      } else {\n        logger('NO Match');\n        // Pass-Through: No match, so other then DefaultDoc, let it pass through\n        event = await rewrite(\n          forceDefaultDoc(request.uri),\n          s3DomainName,\n          handler.event,\n        );\n      }\n    }\n\n    handler.event = event;\n  } catch (err) {\n    logger('Throwing Error for main thread');\n    throw err;\n  }\n\n  logger('RETURNING EVENT!!!!');\n  return;\n};\n\n///////////////////////\n// Utils     //\n///////////////////////\nconst getHeaderValues = (paramArr, headers) =>\n  paramArr.map(\n    param => headers[param] && headers[param][0] && headers[param][0].value,\n  );\nconst isRedirectURI = status => options.redirectStatuses.includes(status);\n\nconst isAbsoluteURI = to => {\n  const test = options.regex.absoluteUri.test(to);\n  logger('isAbsoluteURI: ', test, to);\n  return test;\n};\n\nconst capitalizeParam = param =>\n  param\n    .split('-')\n    .map(i => i.charAt(0).toUpperCase() + i.slice(1))\n    .join('-');\n\nconst forceDefaultDoc = uri =>\n  path.extname(uri) === '' && !!options.defaultDoc\n    ? path.join(uri, options.defaultDoc)\n    : uri;\n\nconst lambdaReponseToObj = req => {\n  const { method, body } = req;\n  return {\n    method,\n    headers: _omit(\n      _reduce(\n        req.headers,\n        (result, value, key) => ({ ...result, [value[0].key]: value[0].value }),\n        {},\n      ),\n      ['Host'],\n    ),\n  };\n};\n\nconst blacklistedHeaders = {\n  exact: [\n    'Connection',\n    'Expect',\n    'Keep-alive',\n    'Proxy-Authenticate',\n    'Proxy-Authorization',\n    'Proxy-Connection',\n    'Trailer',\n    'Upgrade',\n    'X-Accel-Buffering',\n    'X-Accel-Charset',\n    'X-Accel-Limit-Rate',\n    'X-Accel-Redirect',\n    'X-Cache',\n    'X-Forwarded-Proto',\n    'X-Real-IP',\n    'Accept-Encoding',\n    'Content-Length',\n    'If-Modified-Since',\n    'If-None-Match',\n    'If-Range',\n    'If-Unmodified-Since',\n    'Range',\n    'Transfer-Encoding',\n    'Via',\n  ],\n  startsWith: ['X-Amzn-', 'X-Amz-Cf-', 'X-Edge-'],\n};\nconst isBlacklistedProperty = name =>\n  blacklistedHeaders.exact.includes(name) ||\n  !!blacklistedHeaders.startsWith.find(i => name.startsWith(i));\n\n///////////////////////\n// Rules Parsing     //\n///////////////////////\nconst replacePlaceholders = (obj, pattern) =>\n  pattern.replace(/:(?!splat)(\\w+)/g, (_, k) => obj[k]);\n\nconst replaceSplats = (obj, pattern) =>\n  _reduce(\n    obj,\n    (result, value, key) => result.replace(/(:splat)/g, (_, k) => obj[key]),\n    pattern,\n  );\n\nconst replaceAll = (obj, pattern) =>\n  replaceSplats(obj, replacePlaceholders(obj, pattern));\n\nconst parseConditions = conditions =>\n  !!conditions\n    ? conditions.split(';').reduce((results, next) => {\n        const [key, value] = next.split('=');\n        return { ...results, [key.toLowerCase()]: value.split(',') };\n      }, {})\n    : {};\n\nconst parseRules = stringFile => {\n  logger('Parsing String: ', stringFile);\n  return (\n    stringFile\n      // remove empty and commented lines\n      .replace(options.regex.ignoreRules, '')\n      // split all lines\n      .split(/[\\r\\n]/gm)\n      // strip out the last line break\n      .filter(l => l !== '')\n      .map(l => {\n        // regex\n        const [first, from, to, status, force, conditions] = l.match(\n          options.regex.ruleline,\n        );\n        // restructure into object\n        return {\n          from,\n          to,\n          status: status ? parseInt(status, 10) : options.defaultStatus,\n          force: !!force,\n          conditions: parseConditions(conditions),\n        };\n      })\n  );\n};\n\nconst findMatch = (data, path, host, protocol) => {\n  let params;\n  const fullUri = host && `${protocol}${host}${path}`;\n  const match = _find(data, o => {\n    const from = route(o.from);\n    params = isAbsoluteURI(o.from) ? from(fullUri) : from(parse(path).pathname);\n\n    // If there specific language rules, do they match\n    const languagePass = !!o.conditions.language\n      ? !!options.language &&\n        !!langParser.pick(o.conditions.language, options.language, {\n          loose: true,\n        })\n      : true;\n\n    // If there specific country rules, do they match\n    const countryPass = !!o.conditions.country\n      ? !!options.country && o.conditions.country.includes(options.country)\n      : true;\n\n    // Let's make sure all our conditions pass IF set\n    const passesConditions = languagePass && countryPass;\n    return params !== false && passesConditions;\n  });\n  return match && { ...match, parsedTo: replaceAll(params, match.to) };\n};\n\n///////////////////////\n// Data Fetching     //\n///////////////////////\nconst doesKeyExist = rawKey => {\n  const Key = rawKey.replace(/^\\/+/, '');\n  return cache.get(`doesKeyExist_${Key}`, () =>\n    S3.headObject({\n      Bucket: options.originBucket,\n      Key,\n    })\n      .promise()\n      .then(data => {\n        logger('doesKeyExist FOUND: ', Key);\n        return true;\n      })\n      .catch(err => {\n        if (err.errorType === 'NoSuchKey' || err.code === 'NotFound') {\n          logger('doesKeyExist NOT Found: ', Key);\n          return false;\n        }\n        logger('doesKeyExist err: ', err);\n        return false;\n      }),\n  );\n};\n\nconst getRedirectData = () => {\n  const Key = !options.multiFile\n    ? options.file\n    : `${options.file}_${options.host}`;\n  const cacheKey = `${options.rulesBucket}_${Key}`;\n  return cache.get(`getRedirectData_${cacheKey}`, () => {\n    logger(`\n      Getting Rules from: ${options.rules ? 'Options' : 'S3'}\n      Bucket: ${options.rulesBucket}\n      Key: ${Key}`);\n    return !!options.rules\n      ? Promise.resolve(parseRules(options.rules))\n      : S3.getObject({\n          Bucket: options.rulesBucket,\n          Key,\n        })\n          .promise()\n          .then(data => parseRules(data.Body.toString()))\n          .catch(err => {\n            logger('No _redirects file', err);\n            return false;\n          });\n  });\n};\n\nconst getProxyResponse = resp => {\n  const { status, statusText, data } = resp;\n  logger('getProxyResponse raw headers: ', resp.headers);\n  const headers = _omitBy(\n    _reduce(\n      resp.headers,\n      (result, value, key) => ({\n        ...result,\n        [key]: [\n          {\n            key: capitalizeParam(key),\n            value: resp.headers[key],\n          },\n        ],\n      }),\n      {},\n    ),\n    (value, key) => isBlacklistedProperty(value[0].key),\n  );\n  logger('getProxyResponse parse headers: ', headers);\n  const response = {\n    status,\n    statusDescription: statusText,\n    headers,\n    body: JSON.stringify(data),\n  };\n  return response;\n};\n\nconst get404Response = () => {\n  const Key = options.custom404;\n  return cache.get(`get404Response_${Key}`, () =>\n    S3.getObject({\n      Bucket: options.originBucket,\n      Key,\n    })\n      .promise()\n      .then(({ Body }) => {\n        logger('Custom 404 FOUND');\n        return {\n          status: '404',\n          statusDescription: STATUS_CODES['404'],\n          headers: {\n            'content-type': [\n              {\n                key: 'Content-Type',\n                value: 'text/html',\n              },\n            ],\n          },\n          body: Body.toString(),\n        };\n      })\n      .catch(err => {\n        if (err.errorType === 'NoSuchKey') {\n          logger('Custom 404 NOT Found');\n        }\n        logger('Get404ResponseErr', err);\n        return false;\n      }),\n  );\n};\n\n///////////////////////////\n// Event Generators     //\n//////////////////////////\nconst redirect = (to, status) => {\n  logger('Redirecting: ', to, status);\n  return {\n    status,\n    statusDescription: STATUS_CODES[status],\n    headers: {\n      location: [{ key: 'Location', value: to }],\n    },\n  };\n};\n\nconst rewrite = async (to, host, event) => {\n  logger('Rewriting: ', to);\n  const resp =\n    (!isAbsoluteURI(to) &&\n      !(await doesKeyExist(to)) &&\n      (await get404Response())) ||\n    merge(event, {\n      Records: [\n        {\n          cf: {\n            request: {\n              headers: { host: [{ key: 'Host', value: host }] },\n              uri: to,\n            },\n          },\n        },\n      ],\n    });\n  logger('Rewriting Event: ', JSON.stringify(resp));\n  return resp;\n};\n\nconst proxy = (url, event) => {\n  logger('PROXY start: ', url);\n  const { request } = event.Records[0].cf;\n  const config = { ...lambdaReponseToObj(request), validateStatus: null, url };\n  logger('PROXY config: ', config);\n  return axios(config)\n    .then(data => {\n      logger('PROXY data: ', _omit(data, ['request', 'config']));\n      return getProxyResponse(data);\n    })\n    .catch(err => {\n      logger('PROXY err: ', err);\n      throw err;\n    });\n};\n\nexport default opts => ({\n  before: rerouteMiddleware.bind(null, opts),\n});\n","import AWS from 'aws-sdk';\nconst DDB = new AWS.DynamoDB({\n  apiVersion: '2012-08-10',\n  region: 'us-east-1',\n});\n\nexport default DDB;\n","import dotProp from 'dot-prop-immutable';\nimport logger from './utils/logger';\nimport CacheService from './utils/cache-service';\nimport merge from './utils/deepmerge';\nimport DDB from './ddb';\n\nconst S3_SUFFIX = '.s3.amazonaws.com';\nconst ORIGIN_S3_DOTPATH = 'Records.0.cf.request.origin.s3';\n\nconst ttl = 300; // default TTL of 30 seconds\nconst cache = new CacheService(ttl);\n\nconst rerouteOrigin = async (opts = {}, handler, next) => {\n  const { context } = handler;\n  const { request } = handler.event.Records[0].cf;\n  const { origin } = request;\n  const [host] = getHeaderValues(['host'], request.headers);\n  const s3DomainName = origin && origin.s3 && origin.s3.domainName;\n  const originBucket = s3DomainName && s3DomainName.replace(S3_SUFFIX, '');\n\n  const tableSuffix = '-domainmap';\n  const functionSuffix = '-originrequest';\n  const defaults = {\n    functionSuffix,\n    tableSuffix,\n    tableName: getTableFromFunctionName(\n      context.functionName,\n      opts.functionSuffix || functionSuffix,\n      opts.tableSuffix || tableSuffix,\n    ),\n    cacheTtl: ttl,\n  };\n  const options = merge(defaults, opts);\n  cache.setDefaultTtl(options.cacheTtl);\n\n  logger(`\n    Raw Event:\n    ${JSON.stringify(handler.event)}\n\n    Middleware Options:\n    ${JSON.stringify(options)}\n    ---- Request ----\n    URI: ${request.uri}\n    Host: ${host}\n    Origin: ${s3DomainName}\n    `);\n\n  try {\n    const domainData = await getDomainData(options.tableName, host);\n    logger({ domainData });\n    handler.event = !!domainData\n      ? dotProp.merge(handler.event, ORIGIN_S3_DOTPATH, {\n          region: domainData.region,\n          domainName: domainData.origin,\n        })\n      : handler.event;\n  } catch (err) {\n    logger('Throwing Error for main thread');\n    throw err;\n  }\n\n  return;\n};\n\nexport default opts => ({\n  before: rerouteOrigin.bind(null, opts),\n});\n\n///////////////////////\n// Utils     //\n///////////////////////\nconst getHeaderValues = (paramArr, headers) =>\n  paramArr.map(\n    param => headers[param] && headers[param][0] && headers[param][0].value,\n  );\n\n// from:  us-east-1.myproject-prod-originrequest\n// to:    myproject-prod-domainmap\nconst getTableFromFunctionName = (\n  functionName,\n  functionSuffix,\n  tableSuffix,\n) => {\n  logger(`\n  getTableFromFunctionName:\n  ${JSON.stringify({ functionName, functionSuffix, tableSuffix })}\n  `);\n  const [rest, stackname] =\n    functionName.match(`^(?:us-east-1\\.)?(.+)${functionSuffix}$`) || [];\n  return `${stackname}${tableSuffix}`;\n};\n\nconst getDomainData = (table, host) =>\n  cache.get(`getDomainData_${host}`, () =>\n    DDB.getItem({\n      Key: {\n        Host: {\n          S: host,\n        },\n      },\n      TableName: table,\n    })\n      .promise()\n      .then(data => {\n        logger(`\n      getDomainData: \n      ${JSON.stringify(data)}`);\n        return (\n          data.Item &&\n          data.Item.Origin &&\n          data.Item.Origin.S && {\n            host: data.Item.Host.S,\n            origin: data.Item.Origin.S,\n            region: (data.Item.Region && data.Item.Region.S) || 'us-east-1',\n          }\n        );\n      }),\n  );\n"],"names":["log","debug","console","bind","S3","AWS","deepmerge","x","y","arrayMerge","rest","merge","combineMerge","all","arr","emptyTarget","value","Array","isArray","clone","options","target","source","destination","slice","forEach","e","i","cloneRequested","shouldClone","isMergeableObject","indexOf","push","Cache","constructor","ttlSeconds","cache","NodeCache","stdTTL","checkperiod","useClones","ttl","get","key","storeFunction","Promise","resolve","then","result","set","del","keys","setDefaultTtl","flush","delStartWith","startStr","flushAll","CacheService","route","pathMatch","sensitive","strict","end","rerouteMiddleware","opts","handler","next","request","event","Records","cf","origin","getHeaderValues","headers","host","country","language","s3DomainName","s3","domainName","originBucket","replace","defaults","file","rules","undefined","multiFile","rulesBucket","regex","htmlEnd","ignoreRules","ruleline","absoluteUri","defaultStatus","redirectStatuses","friendlyUrls","defaultDoc","custom404","cacheTtl","incomingProtocol","mergeAll","logger","JSON","stringify","uri","Error","keyExists","doesKeyExist","isUnFriendlyUrl","match","first","fullpath","filename","finalKey","redirect","data","getRedirectData","findMatch","parsedTo","isRedirectURI","status","isAbsoluteURI","proxy","rewrite","forceDefaultDoc","err","paramArr","map","param","includes","to","test","capitalizeParam","split","charAt","toUpperCase","join","path","extname","lambdaReponseToObj","req","method","body","_omit","_reduce","blacklistedHeaders","exact","startsWith","isBlacklistedProperty","name","find","replacePlaceholders","obj","pattern","_","k","replaceSplats","replaceAll","parseConditions","conditions","reduce","results","toLowerCase","parseRules","stringFile","filter","l","from","force","parseInt","protocol","params","fullUri","_find","o","parse","pathname","languagePass","langParser","pick","loose","countryPass","passesConditions","rawKey","Key","headObject","Bucket","promise","catch","errorType","code","cacheKey","getObject","Body","toString","getProxyResponse","resp","statusText","_omitBy","response","statusDescription","get404Response","STATUS_CODES","location","url","config","validateStatus","axios","before","DDB","DynamoDB","apiVersion","region","S3_SUFFIX","ORIGIN_S3_DOTPATH","rerouteOrigin","context","tableSuffix","functionSuffix","tableName","getTableFromFunctionName","functionName","domainData","getDomainData","dotProp","stackname","table","getItem","Host","S","TableName","Item","Origin","Region"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,MAAMA,GAAG,GAAGC,KAAK,CAAC,aAAD,CAAjB;AACAD,GAAG,CAACA,GAAJ,GAAUE,OAAO,CAACF,GAAR,CAAYG,IAAZ,CAAiBD,OAAjB,CAAV;;ACDA,MAAME,EAAE,GAAG,IAAIC,GAAG,CAACD,EAAR,EAAX;;ACCA,MAAME,SAAS,GAAG,CAACC,CAAD,EAAIC,CAAJ,EAAO,OAA0B,EAAjC;MAASC,UAAT,QAASA,UAAT;MAAwBC,IAAxB;;SAChBC,KAAK,CAACJ,CAAD,EAAIC,CAAJ,oBAAYE,IAAZ;IAAkBD,UAAU,EAAEG;KADnB;CAAlB;;AAGA,MAAMC,GAAG,GAAG,CAACC,GAAD,EAAM,QAA0B,EAAhC;MAAQL,UAAR,SAAQA,UAAR;MAAuBC,IAAvB;;SACVC,KAAK,CAACE,GAAN,CAAUC,GAAV,oBAAoBJ,IAApB;IAA0BD,UAAU,EAAEG;KAD5B;CAAZ;;AAGA,MAAMG,WAAW,GAAGC,KAAK,IAAKC,KAAK,CAACC,OAAN,CAAcF,KAAd,IAAuB,EAAvB,GAA4B,EAA1D;;AACA,MAAMG,KAAK,GAAG,CAACH,KAAD,EAAQI,OAAR,KAAoBT,KAAK,CAACI,WAAW,CAACC,KAAD,CAAZ,EAAqBA,KAArB,EAA4BI,OAA5B,CAAvC;;AACA,MAAMR,YAAY,GAAG,CAACS,MAAD,EAASC,MAAT,EAAiBF,OAAjB,KAA6B;QAC1CG,WAAW,GAAGF,MAAM,CAACG,KAAP,EAApB;EACAF,MAAM,CAACG,OAAP,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAU;QACnB,OAAOJ,WAAW,CAACI,CAAD,CAAlB,KAA0B,WAA9B,EAA2C;YACnCC,cAAc,GAAGR,OAAO,CAACD,KAAR,KAAkB,KAAzC;YACMU,WAAW,GAAGD,cAAc,IAAIR,OAAO,CAACU,iBAAR,CAA0BJ,CAA1B,CAAtC;MACAH,WAAW,CAACI,CAAD,CAAX,GAAiBE,WAAW,GAAGV,KAAK,CAACO,CAAD,EAAIN,OAAJ,CAAR,GAAuBM,CAAnD;KAHF,MAIO,IAAIN,OAAO,CAACU,iBAAR,CAA0BJ,CAA1B,CAAJ,EAAkC;MACvCH,WAAW,CAACI,CAAD,CAAX,GAAiBhB,KAAK,CAACU,MAAM,CAACM,CAAD,CAAP,EAAYD,CAAZ,EAAeN,OAAf,CAAtB;KADK,MAEA,IAAIC,MAAM,CAACU,OAAP,CAAeL,CAAf,MAAsB,CAAC,CAA3B,EAA8B;MACnCH,WAAW,CAACS,IAAZ,CAAiBN,CAAjB;;GARJ;SAWOH,WAAP;CAbF;;ACRA,MAAMU,KAAN,CAAY;EACVC,WAAW,CAACC,UAAD,EAAa;SACjBC,KAAL,GAAa,IAAIC,SAAJ,CAAc;MACzBC,MAAM,EAAEH,UADiB;MAEzBI,WAAW,EAAEJ,UAAU,GAAG,GAFD;MAGzBK,SAAS,EAAE;KAHA,CAAb;SAMKC,GAAL,GAAWN,UAAX;;;EAGFO,GAAG,CAACC,GAAD,EAAMC,aAAN,EAAqB;QAClB,KAAKH,GAAL,GAAW,CAAf,EAAkB;YACVzB,KAAK,GAAG,KAAKoB,KAAL,CAAWM,GAAX,CAAeC,GAAf,CAAd;;UACI3B,KAAJ,EAAW;eACF6B,OAAO,CAACC,OAAR,CAAgB9B,KAAhB,CAAP;;;;WAGG4B,aAAa,GAAGG,IAAhB,CAAqBC,MAAM,IAAI;WAC/BP,GAAL,GAAW,CAAX,IAAgB,KAAKL,KAAL,CAAWa,GAAX,CAAeN,GAAf,EAAoBK,MAApB,EAA4B,KAAKP,GAAjC,CAAhB;aACOO,MAAP;KAFK,CAAP;;;EAMFE,GAAG,CAACC,IAAD,EAAO;SACHf,KAAL,CAAWc,GAAX,CAAeC,IAAf;;;EAGFC,aAAa,CAACX,GAAD,EAAM;SACZA,GAAL,GAAWA,GAAX;SACKA,GAAL,KAAa,CAAb,IAAkB,KAAKY,KAAL,EAAlB;;;EAGFC,YAAY,CAACC,QAAQ,GAAG,EAAZ,EAAgB;QACtB,CAACA,QAAL,EAAe;;;;UAITJ,IAAI,GAAG,KAAKf,KAAL,CAAWe,IAAX,EAAb;;;;;;2BACkBA,IAAlB,8HAAwB;cAAbR,GAAa;;YAClBA,GAAG,CAACZ,OAAJ,CAAYwB,QAAZ,MAA0B,CAA9B,EAAiC;eAC1BL,GAAL,CAASP,GAAT;;;;;;;;;;;;;;;;;;;EAKNU,KAAK,GAAG;SACDjB,KAAL,CAAWoB,QAAX;;;;;AClCJ,MAAMf,GAAG,GAAG,GAAZ;;AACA,MAAML,KAAK,GAAG,IAAIqB,KAAJ,CAAiBhB,GAAjB,CAAd;AAEA,MAAMiB,KAAK,GAAGC,SAAS,CAAC;EACtBC,SAAS,EAAE,KADW;EAEtBC,MAAM,EAAE,KAFc;EAGtBC,GAAG,EAAE;CAHgB,CAAvB;AAMA,IAAI1C,OAAJ;;AACA,MAAM2C,iBAAiB;;AAAA;+BAAG,WAAOC,IAAI,GAAG,EAAd,EAAkBC,OAAlB,EAA2BC,IAA3B,EAAoC;UACpDC,OADoD,GACxCF,OAAO,CAACG,KAAR,CAAcC,OAAd,CAAsB,CAAtB,EAAyBC,EADe,CACpDH,OADoD;UAEpDI,MAFoD,GAEzCJ,OAFyC,CAEpDI,MAFoD;;6BAG1BC,eAAe,CAC/C,CAAC,MAAD,EAAS,2BAAT,EAAsC,iBAAtC,CAD+C,EAE/CL,OAAO,CAACM,OAFuC,CAHW;;UAGrDC,IAHqD;UAG/CC,OAH+C;UAGtCC,QAHsC;;UAOtDC,YAAY,GAAGN,MAAM,IAAIA,MAAM,CAACO,EAAjB,IAAuBP,MAAM,CAACO,EAAP,CAAUC,UAAtD;UACMC,YAAY,GAChBH,YAAY,IAAIA,YAAY,CAACI,OAAb,CAAqB,mBAArB,EAA0C,EAA1C,CADlB;UAEMC,QAAQ,GAAG;MACfC,IAAI,EAAE,YADS;MAEfC,KAAK,EAAEC,SAFQ;MAGfC,SAAS,EAAE,KAHI;MAIfC,WAAW,EAAEP,YAJE;MAKfQ,KAAK,EAAE;QACLC,OAAO,EAAE,sBADJ;QAELC,WAAW,EAAE,yCAFR;QAGLC,QAAQ,EAAE,6EAHL;QAILC,WAAW,EAAE;OATA;MAWfC,aAAa,EAAE,GAXA;MAYfC,gBAAgB,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAZH;MAafC,YAAY,EAAE,IAbC;MAcfC,UAAU,EAAG,YAdE;MAefC,SAAS,EAAG,UAfG;MAgBfC,QAAQ,EAAEzD,GAhBK;MAiBf0D,gBAAgB,EAAE;KAjBpB;IAmBA/E,OAAO,GAAGgF,GAAQ,CAAC,CACjBlB,QADiB,EAEjBlB,IAFiB,EAGjB;MACEgB,YADF;MAEEN,IAFF;MAGEC,OAHF;MAIEC;KAPe,CAAD,CAAlB;IAUAxC,KAAK,CAACgB,aAAN,CAAoBhC,OAAO,CAAC8E,QAA5B;IAEAG,GAAM,CAAE;;MAEJC,IAAI,CAACC,SAAL,CAAetC,OAAO,CAACG,KAAvB,CAA8B;;;MAG9BkC,IAAI,CAACC,SAAL,CAAenF,OAAf,CAAwB;;WAEnB+C,OAAO,CAACqC,GAAI;YACXpF,OAAO,CAACsD,IAAK;cACXG,YAAa;eACZzD,OAAO,CAACuD,OAAQ;gBACfvD,OAAO,CAACwD,QAAS;KAXzB,CAAN,CAzC4D;;QAwDxD,CAACC,YAAL,EAAmB,MAAM,IAAI4B,KAAJ,CAAU,uBAAV,CAAN;;QAEf;;YAEIC,SAAS,SAASC,YAAY,CAACxC,OAAO,CAACqC,GAAT,CAApC,CAFE;;YAKII,eAAe,GACnBxF,OAAO,CAAC2E,YAAR,IAAwB5B,OAAO,CAACqC,GAAR,CAAYK,KAAZ,CAAkBzF,OAAO,CAACoE,KAAR,CAAcC,OAAhC,CAD1B;UAGIrB,KAAJ,CARE;;;UAWE,CAACsC,SAAD,IAAcE,eAAlB,EAAmC;gDACSA,eADT;cAC1BE,KAD0B;cACnBC,QADmB;cACT5B,IADS;cACH6B,QADG;;cAE3BlD,GAAG,GAAGkD,QAAQ,KAAK,OAAb,GAAuB,EAAvB,GAA6B,GAAEA,QAAS,GAApD;cACMC,QAAQ,GAAI,GAAEF,QAAS,IAAGjD,GAAI,EAApC;QACAuC,GAAM,CAAC,4BAAD,EAA+BlC,OAAO,CAACqC,GAAvC,EAA4CS,QAA5C,CAAN;QACA7C,KAAK,GAAG8C,QAAQ,CAACD,QAAD,EAAW,GAAX,CAAhB;OALF,MAMO;;cAECE,IAAI,SAASC,eAAe,EAAlC;QACAf,GAAM,CAAC,SAAD,EAAYc,IAAZ,CAAN,CAHK;;cAMCN,KAAK,GAAGQ,SAAS,CACrBF,IADqB,EAErBhD,OAAO,CAACqC,GAFa,EAGrB9B,IAHqB,EAIrBtD,OAAO,CAAC+E,gBAJa,CAAvB;;YAMIU,KAAJ,EAAW;UACTR,GAAM,CAAC,eAAD,EAAkBQ,KAAK,CAACS,QAAxB,CAAN,CADS;;;UAITlD,KAAK,GAAGmD,aAAa,CAACV,KAAK,CAACW,MAAP,CAAb,GACJN,QAAQ,CAACL,KAAK,CAACS,QAAP,EAAiBT,KAAK,CAACW,MAAvB,CADJ,GAEJC,aAAa,CAACZ,KAAK,CAACS,QAAP,CAAb,SACMI,KAAK,CAACb,KAAK,CAACS,QAAP,EAAiBrD,OAAO,CAACG,KAAzB,CADX,SAEMuD,OAAO,CACXC,eAAe,CAACf,KAAK,CAACS,QAAP,CADJ,EAEXzC,YAFW,EAGXZ,OAAO,CAACG,KAHG,CAJjB;SAJF,MAaO;UACLiC,GAAM,CAAC,UAAD,CAAN,CADK;;UAGLjC,KAAK,SAASuD,OAAO,CACnBC,eAAe,CAACzD,OAAO,CAACqC,GAAT,CADI,EAEnB3B,YAFmB,EAGnBZ,OAAO,CAACG,KAHW,CAArB;;;;MAQJH,OAAO,CAACG,KAAR,GAAgBA,KAAhB;KArDF,CAsDE,OAAOyD,GAAP,EAAY;MACZxB,GAAM,CAAC,gCAAD,CAAN;YACMwB,GAAN;;;IAGFxB,GAAM,CAAC,qBAAD,CAAN;;GArHqB;;kBAAjBtC,iBAAiB;;;GAAvB;;;;;AA4HA,MAAMS,eAAe,GAAG,CAACsD,QAAD,EAAWrD,OAAX,KACtBqD,QAAQ,CAACC,GAAT,CACEC,KAAK,IAAIvD,OAAO,CAACuD,KAAD,CAAP,IAAkBvD,OAAO,CAACuD,KAAD,CAAP,CAAe,CAAf,CAAlB,IAAuCvD,OAAO,CAACuD,KAAD,CAAP,CAAe,CAAf,EAAkBhH,KADpE,CADF;;AAIA,MAAMuG,aAAa,GAAGC,MAAM,IAAIpG,OAAO,CAAC0E,gBAAR,CAAyBmC,QAAzB,CAAkCT,MAAlC,CAAhC;;AAEA,MAAMC,aAAa,GAAGS,EAAE,IAAI;QACpBC,IAAI,GAAG/G,OAAO,CAACoE,KAAR,CAAcI,WAAd,CAA0BuC,IAA1B,CAA+BD,EAA/B,CAAb;EACA7B,GAAM,CAAC,iBAAD,EAAoB8B,IAApB,EAA0BD,EAA1B,CAAN;SACOC,IAAP;CAHF;;AAMA,MAAMC,eAAe,GAAGJ,KAAK,IAC3BA,KAAK,CACFK,KADH,CACS,GADT,EAEGN,GAFH,CAEOpG,CAAC,IAAIA,CAAC,CAAC2G,MAAF,CAAS,CAAT,EAAYC,WAAZ,KAA4B5G,CAAC,CAACH,KAAF,CAAQ,CAAR,CAFxC,EAGGgH,IAHH,CAGQ,GAHR,CADF;;AAMA,MAAMZ,eAAe,GAAGpB,GAAG,IACzBiC,IAAI,CAACC,OAAL,CAAalC,GAAb,MAAsB,EAAtB,IAA4B,CAAC,CAACpF,OAAO,CAAC4E,UAAtC,GACIyC,IAAI,CAACD,IAAL,CAAUhC,GAAV,EAAepF,OAAO,CAAC4E,UAAvB,CADJ,GAEIQ,GAHN;;AAKA,MAAMmC,kBAAkB,GAAGC,GAAG,IAAI;QACxBC,MADwB,GACPD,GADO,CACxBC,MADwB;QAChBC,IADgB,GACPF,GADO,CAChBE,IADgB;SAEzB;IACLD,MADK;IAELpE,OAAO,EAAEsE,KAAK,CACZC,OAAO,CACLJ,GAAG,CAACnE,OADC,EAEL,CAACzB,MAAD,EAAShC,KAAT,EAAgB2B,GAAhB,uBAA8BK,MAA9B;OAAuChC,KAAK,CAAC,CAAD,CAAL,CAAS2B,GAAV,GAAgB3B,KAAK,CAAC,CAAD,CAAL,CAASA;MAF1D,EAGL,EAHK,CADK,EAMZ,CAAC,MAAD,CANY;GAFhB;CAFF;;AAeA,MAAMiI,kBAAkB,GAAG;EACzBC,KAAK,EAAE,CACL,YADK,EAEL,QAFK,EAGL,YAHK,EAIL,oBAJK,EAKL,qBALK,EAML,kBANK,EAOL,SAPK,EAQL,SARK,EASL,mBATK,EAUL,iBAVK,EAWL,oBAXK,EAYL,kBAZK,EAaL,SAbK,EAcL,mBAdK,EAeL,WAfK,EAgBL,iBAhBK,EAiBL,gBAjBK,EAkBL,mBAlBK,EAmBL,eAnBK,EAoBL,UApBK,EAqBL,qBArBK,EAsBL,OAtBK,EAuBL,mBAvBK,EAwBL,KAxBK,CADkB;EA2BzBC,UAAU,EAAE,CAAC,SAAD,EAAY,WAAZ,EAAyB,SAAzB;CA3Bd;;AA6BA,MAAMC,qBAAqB,GAAGC,IAAI,IAChCJ,kBAAkB,CAACC,KAAnB,CAAyBjB,QAAzB,CAAkCoB,IAAlC,KACA,CAAC,CAACJ,kBAAkB,CAACE,UAAnB,CAA8BG,IAA9B,CAAmC3H,CAAC,IAAI0H,IAAI,CAACF,UAAL,CAAgBxH,CAAhB,CAAxC,CAFJ;;;;;AAOA,MAAM4H,mBAAmB,GAAG,CAACC,GAAD,EAAMC,OAAN,KAC1BA,OAAO,CAACxE,OAAR,CAAgB,kBAAhB,EAAoC,CAACyE,CAAD,EAAIC,CAAJ,KAAUH,GAAG,CAACG,CAAD,CAAjD,CADF;;AAGA,MAAMC,aAAa,GAAG,CAACJ,GAAD,EAAMC,OAAN,KACpBT,OAAO,CACLQ,GADK,EAEL,CAACxG,MAAD,EAAShC,KAAT,EAAgB2B,GAAhB,KAAwBK,MAAM,CAACiC,OAAP,CAAe,WAAf,EAA4B,CAACyE,CAAD,EAAIC,CAAJ,KAAUH,GAAG,CAAC7G,GAAD,CAAzC,CAFnB,EAGL8G,OAHK,CADT;;AAOA,MAAMI,UAAU,GAAG,CAACL,GAAD,EAAMC,OAAN,KACjBG,aAAa,CAACJ,GAAD,EAAMD,mBAAmB,CAACC,GAAD,EAAMC,OAAN,CAAzB,CADf;;AAGA,MAAMK,eAAe,GAAGC,UAAU,IAChC,CAAC,CAACA,UAAF,GACIA,UAAU,CAAC1B,KAAX,CAAiB,GAAjB,EAAsB2B,MAAtB,CAA6B,CAACC,OAAD,EAAU/F,IAAV,KAAmB;sBACzBA,IAAI,CAACmE,KAAL,CAAW,GAAX,CADyB;;QACvC1F,GADuC;QAClC3B,KADkC;;2BAElCiJ,OAAZ;KAAsBtH,GAAG,CAACuH,WAAJ,EAAD,GAAqBlJ,KAAK,CAACqH,KAAN,CAAY,GAAZ;;CAF5C,EAGG,EAHH,CADJ,GAKI,EANN;;AAQA,MAAM8B,UAAU,GAAGC,UAAU,IAAI;EAC/B/D,GAAM,CAAC,kBAAD,EAAqB+D,UAArB,CAAN;SAEEA,UAAU;GAEPnF,OAFH,CAEW7D,OAAO,CAACoE,KAAR,CAAcE,WAFzB,EAEsC,EAFtC;GAIG2C,KAJH,CAIS,UAJT;GAMGgC,MANH,CAMUC,CAAC,IAAIA,CAAC,KAAK,EANrB,EAOGvC,GAPH,CAOOuC,CAAC,IAAI;;qBAE6CA,CAAC,CAACzD,KAAF,CACnDzF,OAAO,CAACoE,KAAR,CAAcG,QADqC,CAF7C;;UAEDmB,KAFC;UAEMyD,IAFN;UAEYrC,EAFZ;UAEgBV,MAFhB;UAEwBgD,KAFxB;UAE+BT,UAF/B;;;WAMD;MACLQ,IADK;MAELrC,EAFK;MAGLV,MAAM,EAAEA,MAAM,GAAGiD,QAAQ,CAACjD,MAAD,EAAS,EAAT,CAAX,GAA0BpG,OAAO,CAACyE,aAH3C;MAIL2E,KAAK,EAAE,CAAC,CAACA,KAJJ;MAKLT,UAAU,EAAED,eAAe,CAACC,UAAD;KAL7B;GAbJ,CADF;CAFF;;AA2BA,MAAM1C,SAAS,GAAG,CAACF,IAAD,EAAOsB,OAAP,EAAa/D,IAAb,EAAmBgG,QAAnB,KAAgC;MAC5CC,MAAJ;QACMC,OAAO,GAAGlG,IAAI,IAAK,GAAEgG,QAAS,GAAEhG,IAAK,GAAE+D,OAAK,EAAlD;;QACM5B,KAAK,GAAGgE,KAAK,CAAC1D,IAAD,EAAO2D,CAAC,IAAI;UACvBP,IAAI,GAAG7G,KAAK,CAACoH,CAAC,CAACP,IAAH,CAAlB;IACAI,MAAM,GAAGlD,aAAa,CAACqD,CAAC,CAACP,IAAH,CAAb,GAAwBA,IAAI,CAACK,OAAD,CAA5B,GAAwCL,IAAI,CAACQ,SAAK,CAACtC,OAAD,CAAL,CAAYuC,QAAb,CAArD,CAF6B;;UAKvBC,YAAY,GAAG,CAAC,CAACH,CAAC,CAACf,UAAF,CAAanF,QAAf,GACjB,CAAC,CAACxD,OAAO,CAACwD,QAAV,IACA,CAAC,CAACsG,UAAU,CAACC,IAAX,CAAgBL,CAAC,CAACf,UAAF,CAAanF,QAA7B,EAAuCxD,OAAO,CAACwD,QAA/C,EAAyD;MACzDwG,KAAK,EAAE;KADP,CAFe,GAKjB,IALJ,CAL6B;;UAavBC,WAAW,GAAG,CAAC,CAACP,CAAC,CAACf,UAAF,CAAapF,OAAf,GAChB,CAAC,CAACvD,OAAO,CAACuD,OAAV,IAAqBmG,CAAC,CAACf,UAAF,CAAapF,OAAb,CAAqBsD,QAArB,CAA8B7G,OAAO,CAACuD,OAAtC,CADL,GAEhB,IAFJ,CAb6B;;UAkBvB2G,gBAAgB,GAAGL,YAAY,IAAII,WAAzC;WACOV,MAAM,KAAK,KAAX,IAAoBW,gBAA3B;GAnBiB,CAAnB;;SAqBOzE,KAAK,sBAASA,KAAT;IAAgBS,QAAQ,EAAEuC,UAAU,CAACc,MAAD,EAAS9D,KAAK,CAACqB,EAAf;IAAhD;CAxBF;;;;;AA8BA,MAAMvB,YAAY,GAAG4E,MAAM,IAAI;QACvBC,GAAG,GAAGD,MAAM,CAACtG,OAAP,CAAe,MAAf,EAAuB,EAAvB,CAAZ;SACO7C,KAAK,CAACM,GAAN,CAAW,gBAAe8I,GAAI,EAA9B,EAAiC,MACtCpL,EAAE,CAACqL,UAAH,CAAc;IACZC,MAAM,EAAEtK,OAAO,CAAC4D,YADJ;IAEZwG;GAFF,EAIGG,OAJH,GAKG5I,IALH,CAKQoE,IAAI,IAAI;IACZd,GAAM,CAAC,sBAAD,EAAyBmF,GAAzB,CAAN;WACO,IAAP;GAPJ,EASGI,KATH,CASS/D,GAAG,IAAI;QACRA,GAAG,CAACgE,SAAJ,KAAkB,WAAlB,IAAiChE,GAAG,CAACiE,IAAJ,KAAa,UAAlD,EAA8D;MAC5DzF,GAAM,CAAC,0BAAD,EAA6BmF,GAA7B,CAAN;aACO,KAAP;;;IAEFnF,GAAM,CAAC,oBAAD,EAAuBwB,GAAvB,CAAN;WACO,KAAP;GAfJ,CADK,CAAP;CAFF;;AAuBA,MAAMT,eAAe,GAAG,MAAM;QACtBoE,GAAG,GAAG,CAACpK,OAAO,CAACkE,SAAT,GACRlE,OAAO,CAAC+D,IADA,GAEP,GAAE/D,OAAO,CAAC+D,IAAK,IAAG/D,OAAO,CAACsD,IAAK,EAFpC;QAGMqH,QAAQ,GAAI,GAAE3K,OAAO,CAACmE,WAAY,IAAGiG,GAAI,EAA/C;SACOpJ,KAAK,CAACM,GAAN,CAAW,mBAAkBqJ,QAAS,EAAtC,EAAyC,MAAM;IACpD1F,GAAM,CAAE;4BACgBjF,OAAO,CAACgE,KAAR,GAAgB,SAAhB,GAA4B,IAAK;gBAC7ChE,OAAO,CAACmE,WAAY;aACvBiG,GAAI,EAHP,CAAN;WAIO,CAAC,CAACpK,OAAO,CAACgE,KAAV,GACHvC,OAAO,CAACC,OAAR,CAAgBqH,UAAU,CAAC/I,OAAO,CAACgE,KAAT,CAA1B,CADG,GAEHhF,EAAE,CAAC4L,SAAH,CAAa;MACXN,MAAM,EAAEtK,OAAO,CAACmE,WADL;MAEXiG;KAFF,EAIGG,OAJH,GAKG5I,IALH,CAKQoE,IAAI,IAAIgD,UAAU,CAAChD,IAAI,CAAC8E,IAAL,CAAUC,QAAV,EAAD,CAL1B,EAMGN,KANH,CAMS/D,GAAG,IAAI;MACZxB,GAAM,CAAC,oBAAD,EAAuBwB,GAAvB,CAAN;aACO,KAAP;KARJ,CAFJ;GALK,CAAP;CALF;;AAyBA,MAAMsE,gBAAgB,GAAGC,IAAI,IAAI;QACvB5E,MADuB,GACM4E,IADN,CACvB5E,MADuB;QACf6E,UADe,GACMD,IADN,CACfC,UADe;QACHlF,IADG,GACMiF,IADN,CACHjF,IADG;EAE/Bd,GAAM,CAAC,gCAAD,EAAmC+F,IAAI,CAAC3H,OAAxC,CAAN;;QACMA,OAAO,GAAG6H,OAAO,CACrBtD,OAAO,CACLoD,IAAI,CAAC3H,OADA,EAEL,CAACzB,MAAD,EAAShC,KAAT,EAAgB2B,GAAhB,uBACKK,MADL;KAEGL,GAAD,GAAO,CACL;MACEA,GAAG,EAAEyF,eAAe,CAACzF,GAAD,CADtB;MAEE3B,KAAK,EAAEoL,IAAI,CAAC3H,OAAL,CAAa9B,GAAb;KAHJ;IAJJ,EAWL,EAXK,CADc,EAcrB,CAAC3B,KAAD,EAAQ2B,GAAR,KAAgByG,qBAAqB,CAACpI,KAAK,CAAC,CAAD,CAAL,CAAS2B,GAAV,CAdhB,CAAvB;;EAgBA0D,GAAM,CAAC,kCAAD,EAAqC5B,OAArC,CAAN;QACM8H,QAAQ,GAAG;IACf/E,MADe;IAEfgF,iBAAiB,EAAEH,UAFJ;IAGf5H,OAHe;IAIfqE,IAAI,EAAExC,IAAI,CAACC,SAAL,CAAeY,IAAf;GAJR;SAMOoF,QAAP;CA1BF;;AA6BA,MAAME,cAAc,GAAG,MAAM;QACrBjB,GAAG,GAAGpK,OAAO,CAAC6E,SAApB;SACO7D,KAAK,CAACM,GAAN,CAAW,kBAAiB8I,GAAI,EAAhC,EAAmC,MACxCpL,EAAE,CAAC4L,SAAH,CAAa;IACXN,MAAM,EAAEtK,OAAO,CAAC4D,YADL;IAEXwG;GAFF,EAIGG,OAJH,GAKG5I,IALH,CAKQ,CAAC;IAAEkJ;GAAH,KAAc;IAClB5F,GAAM,CAAC,kBAAD,CAAN;WACO;MACLmB,MAAM,EAAE,KADH;MAELgF,iBAAiB,EAAEE,iBAAY,CAAC,KAAD,CAF1B;MAGLjI,OAAO,EAAE;wBACS,CACd;UACE9B,GAAG,EAAE,cADP;UAEE3B,KAAK,EAAE;SAHK;OAJb;MAWL8H,IAAI,EAAEmD,IAAI,CAACC,QAAL;KAXR;GAPJ,EAqBGN,KArBH,CAqBS/D,GAAG,IAAI;QACRA,GAAG,CAACgE,SAAJ,KAAkB,WAAtB,EAAmC;MACjCxF,GAAM,CAAC,sBAAD,CAAN;;;IAEFA,GAAM,CAAC,mBAAD,EAAsBwB,GAAtB,CAAN;WACO,KAAP;GA1BJ,CADK,CAAP;CAFF;;;;;AAqCA,MAAMX,QAAQ,GAAG,CAACgB,EAAD,EAAKV,MAAL,KAAgB;EAC/BnB,GAAM,CAAC,eAAD,EAAkB6B,EAAlB,EAAsBV,MAAtB,CAAN;SACO;IACLA,MADK;IAELgF,iBAAiB,EAAEE,iBAAY,CAAClF,MAAD,CAF1B;IAGL/C,OAAO,EAAE;MACPkI,QAAQ,EAAE,CAAC;QAAEhK,GAAG,EAAE,UAAP;QAAmB3B,KAAK,EAAEkH;OAA3B;;GAJd;CAFF;;AAWA,MAAMP,OAAO;;AAAA;gCAAG,WAAOO,EAAP,EAAWxD,IAAX,EAAiBN,KAAjB,EAA2B;IACzCiC,GAAM,CAAC,aAAD,EAAgB6B,EAAhB,CAAN;UACMkE,IAAI,GACP,CAAC3E,aAAa,CAACS,EAAD,CAAd,IACC,QAAQvB,YAAY,CAACuB,EAAD,CAApB,CADD,WAEQuE,cAAc,EAFtB,CAAD,IAGA9L,SAAK,CAACyD,KAAD,EAAQ;MACXC,OAAO,EAAE,CACP;QACEC,EAAE,EAAE;UACFH,OAAO,EAAE;YACPM,OAAO,EAAE;cAAEC,IAAI,EAAE,CAAC;gBAAE/B,GAAG,EAAE,MAAP;gBAAe3B,KAAK,EAAE0D;eAAvB;aADV;YAEP8B,GAAG,EAAE0B;;;OALJ;KADN,CAJP;IAgBA7B,GAAM,CAAC,mBAAD,EAAsBC,IAAI,CAACC,SAAL,CAAe6F,IAAf,CAAtB,CAAN;WACOA,IAAP;GAnBW;;kBAAPzE,OAAO;;;GAAb;;AAsBA,MAAMD,KAAK,GAAG,CAACkF,MAAD,EAAMxI,KAAN,KAAgB;EAC5BiC,GAAM,CAAC,eAAD,EAAkBuG,MAAlB,CAAN;QACQzI,OAFoB,GAERC,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiBC,EAFT,CAEpBH,OAFoB;;QAGtB0I,MAAM,qBAAQlE,kBAAkB,CAACxE,OAAD,CAA1B;IAAqC2I,cAAc,EAAE,IAArD;SAA2DF;IAAvE;;EACAvG,GAAM,CAAC,gBAAD,EAAmBwG,MAAnB,CAAN;SACOE,KAAK,CAACF,MAAD,CAAL,CACJ9J,IADI,CACCoE,IAAI,IAAI;IACZd,GAAM,CAAC,cAAD,EAAiB0C,KAAK,CAAC5B,IAAD,EAAO,CAAC,SAAD,EAAY,QAAZ,CAAP,CAAtB,CAAN;WACOgF,gBAAgB,CAAChF,IAAD,CAAvB;GAHG,EAKJyE,KALI,CAKE/D,GAAG,IAAI;IACZxB,GAAM,CAAC,aAAD,EAAgBwB,GAAhB,CAAN;UACMA,GAAN;GAPG,CAAP;CALF;;AAgBA,eAAe7D,IAAI,KAAK;EACtBgJ,MAAM,EAAEjJ,iBAAiB,CAAC5D,IAAlB,CAAuB,IAAvB,EAA6B6D,IAA7B;CADS,CAAnB;;AC/cA,MAAMiJ,GAAG,GAAG,IAAI5M,GAAG,CAAC6M,QAAR,CAAiB;EAC3BC,UAAU,EAAE,YADe;EAE3BC,MAAM,EAAE;CAFE,CAAZ;;ACKA,MAAMC,SAAS,GAAG,mBAAlB;AACA,MAAMC,iBAAiB,GAAG,gCAA1B;AAEA,MAAM7K,KAAG,GAAG,GAAZ;;AACA,MAAML,OAAK,GAAG,IAAIqB,KAAJ,CAAiBhB,KAAjB,CAAd;;AAEA,MAAM8K,aAAa;;AAAA;+BAAG,WAAOvJ,IAAI,GAAG,EAAd,EAAkBC,OAAlB,EAA2BC,IAA3B,EAAoC;UAChDsJ,OADgD,GACpCvJ,OADoC,CAChDuJ,OADgD;UAEhDrJ,OAFgD,GAEpCF,OAAO,CAACG,KAAR,CAAcC,OAAd,CAAsB,CAAtB,EAAyBC,EAFW,CAEhDH,OAFgD;UAGhDI,MAHgD,GAGrCJ,OAHqC,CAGhDI,MAHgD;;6BAIzCC,iBAAe,CAAC,CAAC,MAAD,CAAD,EAAWL,OAAO,CAACM,OAAnB,CAJ0B;;UAIjDC,IAJiD;;UAKlDG,YAAY,GAAGN,MAAM,IAAIA,MAAM,CAACO,EAAjB,IAAuBP,MAAM,CAACO,EAAP,CAAUC,UAAtD;UACMC,YAAY,GAAGH,YAAY,IAAIA,YAAY,CAACI,OAAb,CAAqBoI,SAArB,EAAgC,EAAhC,CAArC;UAEMI,WAAW,GAAG,YAApB;UACMC,cAAc,GAAG,gBAAvB;UACMxI,QAAQ,GAAG;MACfwI,cADe;MAEfD,WAFe;MAGfE,SAAS,EAAEC,wBAAwB,CACjCJ,OAAO,CAACK,YADyB,EAEjC7J,IAAI,CAAC0J,cAAL,IAAuBA,cAFU,EAGjC1J,IAAI,CAACyJ,WAAL,IAAoBA,WAHa,CAHpB;MAQfvH,QAAQ,EAAEzD;KARZ;UAUMrB,OAAO,GAAGT,SAAK,CAACuE,QAAD,EAAWlB,IAAX,CAArB;IACA5B,OAAK,CAACgB,aAAN,CAAoBhC,OAAO,CAAC8E,QAA5B;IAEAG,GAAM,CAAE;;MAEJC,IAAI,CAACC,SAAL,CAAetC,OAAO,CAACG,KAAvB,CAA8B;;;MAG9BkC,IAAI,CAACC,SAAL,CAAenF,OAAf,CAAwB;;WAEnB+C,OAAO,CAACqC,GAAI;YACX9B,IAAK;cACHG,YAAa;KATnB,CAAN;;QAYI;YACIiJ,UAAU,SAASC,aAAa,CAAC3M,OAAO,CAACuM,SAAT,EAAoBjJ,IAApB,CAAtC;MACA2B,GAAM,CAAC;QAAEyH;OAAH,CAAN;MACA7J,OAAO,CAACG,KAAR,GAAgB,CAAC,CAAC0J,UAAF,GACZE,OAAO,CAACrN,KAAR,CAAcsD,OAAO,CAACG,KAAtB,EAA6BkJ,iBAA7B,EAAgD;QAC9CF,MAAM,EAAEU,UAAU,CAACV,MAD2B;QAE9CrI,UAAU,EAAE+I,UAAU,CAACvJ;OAFzB,CADY,GAKZN,OAAO,CAACG,KALZ;KAHF,CASE,OAAOyD,GAAP,EAAY;MACZxB,GAAM,CAAC,gCAAD,CAAN;YACMwB,GAAN;;;;GA9Ce;;kBAAb0F,aAAa;;;GAAnB;;AAoDA,uBAAevJ,IAAI,KAAK;EACtBgJ,MAAM,EAAEO,aAAa,CAACpN,IAAd,CAAmB,IAAnB,EAAyB6D,IAAzB;CADS,CAAnB;;;;AAOA,MAAMQ,iBAAe,GAAG,CAACsD,QAAD,EAAWrD,OAAX,KACtBqD,QAAQ,CAACC,GAAT,CACEC,KAAK,IAAIvD,OAAO,CAACuD,KAAD,CAAP,IAAkBvD,OAAO,CAACuD,KAAD,CAAP,CAAe,CAAf,CAAlB,IAAuCvD,OAAO,CAACuD,KAAD,CAAP,CAAe,CAAf,EAAkBhH,KADpE,CADF;;;;AAOA,MAAM4M,wBAAwB,GAAG,CAC/BC,YAD+B,EAE/BH,cAF+B,EAG/BD,WAH+B,KAI5B;EACHpH,GAAM,CAAE;;IAENC,IAAI,CAACC,SAAL,CAAe;IAAEsH,YAAF;IAAgBH,cAAhB;IAAgCD;GAA/C,CAA8D;GAF1D,CAAN;;gBAKEI,YAAY,CAAChH,KAAb,CAAoB,wBAAuB6G,cAAe,GAA1D,KAAiE,EANhE;;QAKIhN,IALJ;QAKUuN,SALV;;SAOK,GAAEA,SAAU,GAAER,WAAY,EAAlC;CAXF;;AAcA,MAAMM,aAAa,GAAG,CAACG,KAAD,EAAQxJ,IAAR,KACpBtC,OAAK,CAACM,GAAN,CAAW,iBAAgBgC,IAAK,EAAhC,EAAmC,MACjCuI,GAAG,CAACkB,OAAJ,CAAY;EACV3C,GAAG,EAAE;IACH4C,IAAI,EAAE;MACJC,CAAC,EAAE3J;;GAHG;EAMV4J,SAAS,EAAEJ;CANb,EAQGvC,OARH,GASG5I,IATH,CASQoE,IAAI,IAAI;EACZd,GAAM,CAAE;;QAERC,IAAI,CAACC,SAAL,CAAeY,IAAf,CAAqB,EAFf,CAAN;SAIEA,IAAI,CAACoH,IAAL,IACApH,IAAI,CAACoH,IAAL,CAAUC,MADV,IAEArH,IAAI,CAACoH,IAAL,CAAUC,MAAV,CAAiBH,CAFjB,IAEsB;IACpB3J,IAAI,EAAEyC,IAAI,CAACoH,IAAL,CAAUH,IAAV,CAAeC,CADD;IAEpB9J,MAAM,EAAE4C,IAAI,CAACoH,IAAL,CAAUC,MAAV,CAAiBH,CAFL;IAGpBjB,MAAM,EAAGjG,IAAI,CAACoH,IAAL,CAAUE,MAAV,IAAoBtH,IAAI,CAACoH,IAAL,CAAUE,MAAV,CAAiBJ,CAAtC,IAA4C;GANxD;CAbJ,CADF,CADF;;;;;"}